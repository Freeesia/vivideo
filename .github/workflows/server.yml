name: Server

on:
  push:
env:
  IMAGE_NAME: server
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-buildx-action@v1.0.2
      - uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
      - uses: nelonoel/branch-name@v1
      - uses: actions/cache@v2
        with:
          path: ~/buildx-cache
          key: docker-buildx-${{ github.sha }}
          restore-keys: |
            docker-buildx-
      - run: git fetch --prune --unshallow
      - uses: gittools/actions/gitversion/setup@v0.9.1
        with:
            versionSpec: '5.1.x'
      - id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.1
      - id: image-tag
        run: |
          IMAGE_ID=${{ github.repository }}/$IMAGE_NAME
          IMAGE_ID=${IMAGE_ID,,}
          VERSION=$(echo $BRANCH_NAME | sed -e 's,.*/\(.*\),\1,')
          [ "$VERSION" == "master" ] && VERSION=latest
          echo "::set-output name=tag::$IMAGE_ID:$VERSION"
      - uses: docker/build-push-action@v2.1.0
        with:
          file: .docker/Dockerfile
          build-args: |
            Version=${{ steps.gitversion.outputs.fullSemVer }}
            AssemblyVersion=${{ steps.gitversion.outputs.assemblySemVer }}
            FileVersion=${{ steps.gitversion.outputs.assemblySemFileVer }}
            InformationalVersion=${{ steps.gitversion.outputs.informationalVersion }}
            Sha=${{ steps.gitversion.outputs.Sha }}
            BuildDate=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
            SENTRY_AUTH_TOKEN=${{ (env.BRANCH_NAME == 'master' && secrets.SENTRY_AUTH_TOKEN) || '' }}
          tags: ghcr.io/${{ steps.image-tag.outputs.tag }}
          push: true
          cache-from: type=local,src=~/buildx-cache
          cache-to: type=local,mode=max,dest=~/buildx-cache
      - uses: dmandrade/sentry-release-github-action@v1
        if: env.BRANCH_NAME == 'master'
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: studiofreesia
          SENTRY_PROJECT: vivideo
        with:
          environment: production
          version: ${{ steps.gitversion.outputs.informationalVersion }}
