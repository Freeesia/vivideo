name: Server

on:
  push:
env:
  IMAGE_NAME: server
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: git fetch --prune --unshallow
      - uses: gittools/actions/gitversion/setup@v0.9.1
        with:
            versionSpec: '5.1.x'
      - id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.1
      - run: |
          docker build . --file .docker/Dockerfile --tag image \
          --build-arg Version=${{ steps.gitversion.outputs.fullSemVer }} \
          --build-arg AssemblyVersion=${{ steps.gitversion.outputs.assemblySemVer }} \
          --build-arg FileVersion=${{ steps.gitversion.outputs.assemblySemFileVer }} \
          --build-arg InformationalVersion=${{ steps.gitversion.outputs.informationalVersion }}
      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin
      - name: Push image
        run: |
          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME
          IMAGE_ID=${IMAGE_ID,,}
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          [ "$VERSION" == "master" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag image $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
