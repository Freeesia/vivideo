name: Server

on:
  push:
env:
  IMAGE_NAME: server
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: docker/setup-buildx-action@v2
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - id: branch-name
        uses: tj-actions/branch-names@v5.2
      - uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: docker-buildx-${{ github.sha }}
          restore-keys: |
            docker-buildx-
      - uses: gittools/actions/gitversion/setup@v0.9.13
        with:
          versionSpec: "5.x"
      - id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.13
      - id: image-tag
        run: |
          IMAGE_ID=${{ github.repository }}/$IMAGE_NAME
          IMAGE_ID=${IMAGE_ID,,}
          VERSION=$(echo ${{ steps.branch-name.outputs.current_branch }} | sed -e 's,.*/\(.*\),\1,')
          [ "$VERSION" == "master" ] && VERSION=latest
          echo "image_tag=$IMAGE_ID:$VERSION" >> $GITHUB_ENV
      - uses: docker/build-push-action@v3
        with:
          file: .docker/Dockerfile
          build-args: |
            Version=${{ steps.gitversion.outputs.fullSemVer }}
            AssemblyVersion=${{ steps.gitversion.outputs.assemblySemVer }}
            FileVersion=${{ steps.gitversion.outputs.assemblySemFileVer }}
            InformationalVersion=${{ steps.gitversion.outputs.informationalVersion }}
            Sha=${{ steps.gitversion.outputs.Sha }}
            BuildDate=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
            SENTRY_AUTH_TOKEN=${{ (steps.branch-name.outputs.is_default == 'true' && secrets.SENTRY_AUTH_TOKEN) || '' }}
          tags: ghcr.io/${{ env.image_tag }}
          push: true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache
      - uses: dmandrade/sentry-release-github-action@v1
        if: steps.branch-name.outputs.is_default == 'true'
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: studiofreesia
          SENTRY_PROJECT: vivideo
        with:
          environment: production
          version: ${{ steps.gitversion.outputs.informationalVersion }}
